<!DOCTYPE html>
<html class="role-ebook-page" lang="en" xml:lang="en"
      xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta charset="UTF-8" />

    <title>Adding Constraints to a Class Design Model</title>
  </head>

  <body><section><p>The <strong><em>data integrity rules</em></strong> (or
  'business rules') that govern the management of data can be expressed in the
  form of <em>invariants</em> in a UML class model as shown in the following
  diagram.</p><figure id="fig1-2"> <img
  alt="A design model defining the object type Book with two invariants"
  class="responsive" src="../fig/Book_SimpleAppDesM.svg" /></figure><p>In this
  model, the following constraints have been expressed:</p><ol>
      <li><p>Due to the fact that the <code>isbn</code> attribute is declared
      to be the <em>standard identifier</em> of <code>Book</code>, it is
      <strong><em>mandatory</em></strong> and
      <strong><em>unique</em></strong>.</p></li>

      <li><p>The <code>isbn</code> attribute has a <strong><em>pattern
      constraint</em></strong> requiring its values to match the ISBN-10
      format that admits only 10-digit strings or 9-digit strings followed by
      "X".</p></li>

      <li><p>The <code>title</code> attribute is
      <strong><em>mandatory</em></strong>, as indicated by its multiplicity
      expression [1], and has a <strong><em>string length
      constraint</em></strong> requiring its values to have at most 50
      characters.</p></li>

      <li><p>The <code>year</code> attribute is
      <strong><em>mandatory</em></strong> and has an <strong><em>interval
      constraint</em></strong>, however, of a special form since the maximum
      is not fixed, but provided by the calendar function
      <code>nextYear()</code>, which we implement as a utility
      function.</p></li>
    </ol><p>Notice that the <code>edition</code> attribute is not mandatory,
  but <em>optional</em>, as indicated by its multiplicity expression [0..1].
  In addition to the constraints described in this list, there are the
  implicit range constraints defined by assigning the datatype
  <code>NonEmptyString</code> as range to <code>isbn</code> and
  <code>title</code>, <code>Integer</code> to <code>year</code>, and
  <code>PositiveInteger</code> to <code>edition</code>. In our plain
  JavaScript approach, all these property constraints are coded in the model
  class within property-specific <em>check</em> functions.</p><p>The meaning
  of the design model can be illustrated by a sample data population
  respecting all constraints:</p><table>
      <caption>Sample data for <code>Book</code></caption>

      <thead>
        <tr>
          <th>ISBN</th>

          <th>Title</th>

          <th>Year</th>

          <th>Edition</th>
        </tr>
      </thead>

      <tbody>
        <tr>
          <td>006251587X</td>

          <td>Weaving the Web</td>

          <td>2000</td>

          <td>3</td>
        </tr>

        <tr>
          <td>0465026567</td>

          <td>GÃ¶del, Escher, Bach</td>

          <td>1999</td>

          <td>2</td>
        </tr>

        <tr>
          <td>0465030793</td>

          <td>I Am A Strange Loop</td>

          <td>2008</td>

          <td></td>
        </tr>
      </tbody>
    </table> </section></body>
</html>
